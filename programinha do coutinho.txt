- criar interface 
	- métodos comuns 
		- Mover 
		- Verificar posição (se saiu da tela) 
		- Verificar estado 
		- Verificar colisão 
		- classes 
			- Jogador 
				- coleção de laser jogador 
				- Desenho 
			- Inimigo 
				- Criação de subclasses (herança ou outro) 
				- Inimigo 1 
					- Coleção 1 
					- Desenho 
					- laser 1 
					- Coleção laser 1 
				- Inimigo 2 
					- Coleção 2 
					- Desenho 
					- laser 2 
					- Coleção laser 2 
				- Inimigo novo 
					- coleção nova 
					- Desenho 
					- laser nova 
					- Coleção laser nova 
					- movimentação diferente 
					- Verifica colisão 
			- Laser 
				- Efeitos do inimigo 1
				- Efeitos do inimigo 2 
				- Efeitos do jogador 
				- Efeitos do inimigo novo 
				- Verifica colisão 
				- verifica se laser saiu da tela 
				- Estado do laser 
				- Coleção de laser 
				- Desenho 
	- Sistema de pontuação

*Java Collections Framework*
- conjunto de classes que implementam diversas estruturas de dados clássicas (listas, filas, árvores, hashing etc) organizadas em uma arquitetura unificada
	- estruturas implementadas da forma mais eficiente possível, levando em conta as características de cada uma
	- permite a troca de uma estrutura por outra, causando o mínimo de impacto no código
- todas as estruturas são dinâmicas e permitem
	- adicionar
	- remover
	- verificar
	- percorrer
- o framework é composto por um conjunto de classes e interfaces
	- principais interfaces
		- Collection	comportamentos básicos que toda estrutura deve ter
		- List		armazenam os elementos de forma linear
		- Set		não aceitam elementos repetidos / não definem ordem
		- SortedSet	elementos organizados de acordo com seus valores
		- Map		estruturas que guardam "valores" associados a "chaves"
- o framework é composto por um conjunto de classes e interfaces
	- principais classes
		- ArrayList	lista linear baseada em vetor (array)
		- LinkedList	lista ligada
		- HashSet	tabela de hashing
		- TreeSet	árvore de busca binária balanceada

		- HashMap	chaves organizadas em uma tabela de hashing
		- TreeMap	chaves organizadas em uma árvore de busca binária
